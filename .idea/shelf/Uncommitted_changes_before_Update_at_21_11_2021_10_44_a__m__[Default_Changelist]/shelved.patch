Index: src/Dominio/Tile.java
===================================================================
diff --git a/src/Dominio/Tile.java b/src/Dominio/Tile.java
deleted file mode 100644
--- a/src/Dominio/Tile.java	(revision f31d3f29cadc13628bf982bf4734c5fe0deff73b)
+++ /dev/null	(revision f31d3f29cadc13628bf982bf4734c5fe0deff73b)
@@ -1,13 +0,0 @@
-package Dominio;
-
-import java.awt.*;
-
-public class Tile {
-    private int row;
-    private int col;
-    private Color color;
-    private int spawnCol;
-    private int spawnRow;
-    private int currentCol;
-    private int currentRow;
-}
Index: src/Dominio/Tetrominoe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dominio;\r\n\r\nimport java.awt.*;\r\n\r\npublic class Tetrominoe {\r\n    //public enum\r\n\r\n    private Boolean[][] tiles;\r\n    private int rows;\r\n    private int cols;\r\n    private int currentCol;\r\n    private int currentrow;\r\n    private int rotation;\r\n\r\n\r\n    /*public int getDimension() {\r\n        return 0;\r\n    }\r\n\r\n    public boolean isTile(int col, int row, int rotation) {\r\n        return false;\r\n    }\r\n\r\n    public Color getBaseColor() {\r\n        return null;\r\n    }\r\n\r\n    public int getLeftInset(int rotation) {\r\n        return 0;\r\n    }\r\n\r\n    public int getRightInset(int rotation) {\r\n        return 0;\r\n    }\r\n\r\n    public int getTopInset(int rotation) {\r\n        return 0;\r\n    }\r\n\r\n    public int getBottomInset(int rotation) {\r\n        return 0;\r\n    }\r\n\r\n    public Color getLightColor() {\r\n        return null;\r\n    }\r\n\r\n    public Color getDarkColor() {\r\n        return null;\r\n    }*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dominio/Tetrominoe.java b/src/Dominio/Tetrominoe.java
--- a/src/Dominio/Tetrominoe.java	(revision f31d3f29cadc13628bf982bf4734c5fe0deff73b)
+++ b/src/Dominio/Tetrominoe.java	(date 1637477423002)
@@ -3,9 +3,118 @@
 import java.awt.*;
 
 public class Tetrominoe {
-    //public enum
+    private final boolean[][] TYPEZ = {
+        {
+            false,	true,	true,
+            true,	true,	false,
+            false,	false,	false,
+        },
+        {
+            false,	true,	false,
+            false,	true,	true,
+            false,	false,	true,
+        },
+        {
+            false,	false,	false,
+            false,	true,	true,
+            true,	true,	false,
+        },
+        {
+            true,	false,	false,
+            true,	true,	false,
+            false,	true,	false,
+        }
+    };
+    private final boolean[][] TYPEI ={
+        {
+            false,	false,	false,	false,
+            true,	true,	true,	true,
+            false,	false,	false,	false,
+            false,	false,	false,	false,
+        },
+        {
+            false,	false,	true,	false,
+            false,	false,	true,	false,
+            false,	false,	true,	false,
+            false,	false,	true,	false,
+        },
+        {
+            false,	false,	false,	false,
+            false,	false,	false,	false,
+            true,	true,	true,	true,
+            false,	false,	false,	false,
+        },
+        {
+            false,	true,	false,	false,
+            false,	true,	false,	false,
+            false,	true,	false,	false,
+            false,	true,	false,	false,
+        }
+    };
 
-    private Boolean[][] tiles;
+    private final boolean[][] TYPET = {
+        {
+            false,	true,	false,
+            true,	true,	true,
+            false,	false,	false,
+        },
+        {
+            false,	true,	false,
+            false,	true,	true,
+            false,	true,	false,
+        },
+        {
+            false,	false,	false,
+            true,	true,	true,
+            false,	true,	false,
+        },
+        {
+            false,	true,	false,
+            true,	true,	false,
+            false,	true,	false,
+        }
+    };
+    private final boolean[][] TYPEL = {
+        {
+            false,	false,	true,
+            true,	true,	true,
+            false,	false,	false,
+        },
+        {
+            false,	true,	false,
+            false,	true,	false,
+            false,	true,	true,
+        },
+        {
+            false,	false,	false,
+            true,	true,	true,
+            true,	false,	false,
+        },
+        {
+            true,	true,	false,
+            false,	true,	false,
+            false,	true,	false,
+        }
+    };
+    private final boolean[][] TYPEO ={
+        {
+            true,	true,
+            true,	true,
+        },
+        {
+            true,	true,
+            true,	true,
+        },
+        {
+            true,	true,
+            true,	true,
+        },
+        {
+            true,	true,
+            true,	true,
+        }
+    };
+
     private int rows;
     private int cols;
     private int currentCol;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b2d7d353-4d5c-4575-b84c-54a645cdaf76\" name=\"Default Changelist\" comment=\"1\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Board$GameCycle.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Board$TAdapter.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Board.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Shape$Tetrominoe.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Shape.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Tetris.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Presentacion/Board$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Presentacion/Board$1.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Presentacion/Board.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/ProyectoFinal/Presentacion/Board.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Ayudas/ayuda1/Board.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Ayudas/ayuda1/Board.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Ayudas/ayuda1/Tetris.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Ayudas/ayuda1/Tetris.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Presentacion/Board.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Presentacion/Board.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"219ng7fLrLYiOThqrYRwlje8R7Z\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main1\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Presentacion.Tetris1\" />\r\n      <module name=\"ProyectoFinal\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b2d7d353-4d5c-4575-b84c-54a645cdaf76\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1637362279305</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1637362279305</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"1\">\r\n      <created>1637378982334</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1637378982334</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"1\">\r\n      <created>1637379033699</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1637379033699</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"1\">\r\n      <created>1637462107171</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1637462107171</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"1\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/ProyectoFinal$TetrisGUI.ic\" NAME=\"TetrisGUI Coverage Results\" MODIFIED=\"1636317703885\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/ProyectoFinal$Tetris.ic\" NAME=\"Tetris Coverage Results\" MODIFIED=\"1636420029275\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>Presentacion.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/ProyectoFinal$Test2.ic\" NAME=\"Test2 Coverage Results\" MODIFIED=\"1636310506778\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>Presentacion.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f31d3f29cadc13628bf982bf4734c5fe0deff73b)
+++ b/.idea/workspace.xml	(date 1637477320433)
@@ -5,18 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b2d7d353-4d5c-4575-b84c-54a645cdaf76" name="Default Changelist" comment="1">
+      <change afterPath="$PROJECT_DIR$/src/Ayudas/ayuda1/Shape.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Board$GameCycle.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Board$TAdapter.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Board.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Shape$Tetrominoe.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Shape.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ProyectoFinal/Ayudas/ayuda1/Tetris.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ProyectoFinal/Presentacion/Board$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/ProyectoFinal/Presentacion/Board$1.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ProyectoFinal/Presentacion/Board.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/ProyectoFinal/Presentacion/Board.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Ayudas/ayuda1/Board.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Ayudas/ayuda1/Board.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Ayudas/ayuda1/Tetris.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Ayudas/ayuda1/Tetris.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Presentacion/Board.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Presentacion/Board.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dominio/Tetrominoe.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dominio/Tetrominoe.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dominio/Tile.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -42,11 +34,15 @@
     </file-type-list>
   </component>
   <component name="ProjectId" id="219ng7fLrLYiOThqrYRwlje8R7Z" />
+  <component name="ProjectLevelVcsManager">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">
+    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
@@ -90,9 +86,26 @@
       <option name="project" value="LOCAL" />
       <updated>1637462107171</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="1">
+      <created>1637462950484</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1637462950484</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
+  <component name="Vcs.Log.History.Properties">
+    <option name="COLUMN_ID_ORDER">
+      <list>
+        <option value="Default.Root" />
+        <option value="Default.Author" />
+        <option value="Default.Date" />
+        <option value="Default.Subject" />
+      </list>
+    </option>
+  </component>
   <component name="Vcs.Log.Tabs.Properties">
     <option name="TAB_STATES">
       <map>
@@ -106,6 +119,7 @@
     <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
+    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
     <MESSAGE value="1" />
     <option name="LAST_COMMIT_MESSAGE" value="1" />
   </component>
Index: src/Ayudas/ayuda1/Shape.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Ayudas/ayuda1/Shape.java b/src/Ayudas/ayuda1/Shape.java
new file mode 100644
--- /dev/null	(date 1637475445976)
+++ b/src/Ayudas/ayuda1/Shape.java	(date 1637475445976)
@@ -0,0 +1,129 @@
+package Ayudas.ayuda1;
+
+import java.util.Random;
+
+public class Shape {
+
+    protected enum Tetrominoe { NoShape, ZShape, SShape, LineShape,
+        TShape, SquareShape, LShape, MirroredLShape }
+
+    private Tetrominoe pieceShape;
+    private int coords[][];
+    private int[][][] coordsTable;
+
+
+    public Shape() {
+
+        initShape();
+    }
+
+    private void initShape() {
+
+        coords = new int[4][2];
+
+        coordsTable = new int[][][] {
+                { { 0, 0 },   { 0, 0 },   { 0, 0 },   { 0, 0 } },
+                { { 0, -1 },  { 0, 0 },   { -1, 0 },  { -1, 1 } },
+                { { 0, -1 },  { 0, 0 },   { 1, 0 },   { 1, 1 } },
+                { { 0, -1 },  { 0, 0 },   { 0, 1 },   { 0, 2 } },
+                { { -1, 0 },  { 0, 0 },   { 1, 0 },   { 0, 1 } },
+                { { 0, 0 },   { 1, 0 },   { 0, 1 },   { 1, 1 } },
+                { { -1, -1 }, { 0, -1 },  { 0, 0 },   { 0, 1 } },
+                { { 1, -1 },  { 0, -1 },  { 0, 0 },   { 0, 1 } }
+        };
+
+        setShape(Tetrominoe.NoShape);
+    }
+
+    protected void setShape(Tetrominoe shape) {
+
+        for (int i = 0; i < 4 ; i++) {
+
+            for (int j = 0; j < 2; ++j) {
+
+                coords[i][j] = coordsTable[shape.ordinal()][i][j];
+            }
+        }
+
+        pieceShape = shape;
+    }
+
+    private void setX(int index, int x) { coords[index][0] = x; }
+    private void setY(int index, int y) { coords[index][1] = y; }
+    public int x(int index) { return coords[index][0]; }
+    public int y(int index) { return coords[index][1]; }
+    public Tetrominoe getShape()  { return pieceShape; }
+
+    public void setRandomShape() {
+
+        var r = new Random();
+        int x = Math.abs(r.nextInt()) % 7 + 1;
+
+        Tetrominoe[] values = Tetrominoe.values();
+        setShape(values[x]);
+    }
+
+    public int minX() {
+
+        int m = coords[0][0];
+
+        for (int i=0; i < 4; i++) {
+
+            m = Math.min(m, coords[i][0]);
+        }
+
+        return m;
+    }
+
+
+    public int minY() {
+
+        int m = coords[0][1];
+
+        for (int i=0; i < 4; i++) {
+
+            m = Math.min(m, coords[i][1]);
+        }
+
+        return m;
+    }
+
+    public Shape rotateLeft() {
+
+        if (pieceShape == Tetrominoe.SquareShape) {
+
+            return this;
+        }
+
+        var result = new Shape();
+        result.pieceShape = pieceShape;
+
+        for (int i = 0; i < 4; ++i) {
+
+            result.setX(i, y(i));
+            result.setY(i, -x(i));
+        }
+
+        return result;
+    }
+
+    public Shape rotateRight() {
+
+        if (pieceShape == Tetrominoe.SquareShape) {
+
+            return this;
+        }
+
+        var result = new Shape();
+        result.pieceShape = pieceShape;
+
+        for (int i = 0; i < 4; ++i) {
+
+            result.setX(i, -y(i));
+            result.setY(i, x(i));
+        }
+
+        return result;
+    }
+}
+
Index: src/Presentacion/Tetris1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Presentacion;\r\n\r\nimport Dominio.Tetrominoe;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.CompoundBorder;\r\nimport javax.swing.border.EmptyBorder;\r\nimport javax.swing.border.TitledBorder;\r\nimport java.awt.*;\r\nimport java.awt.Font;\r\n\r\npublic class Tetris1 extends JFrame {\r\n    //Panel NewFigure\r\n    NewFigurePanel newFigure;\r\n    //Panel Board\r\n    Board board;\r\n    //Tamano ventana\r\n    private final int ANCHO = Toolkit.getDefaultToolkit().getScreenSize().width - 800;\r\n    private final int ALTO = Toolkit.getDefaultToolkit().getScreenSize().height - 200;\r\n\r\n    public Tetris1(String title) {\r\n        super(title);\r\n        prepareElementos();\r\n    }\r\n    public static void main(String[] args){\r\n        Tetris1 gui = new Tetris1(\"prueba\");\r\n        gui.setVisible(true);\r\n    }\r\n\r\n    public void prepareElementos(){\r\n        setPreferredSize(new Dimension(ANCHO,ALTO));\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        pack();\r\n        setResizable(false);\r\n        setLayout(new BorderLayout());\r\n        cargueElementos();\r\n        configureElementos();\r\n        agregueElementos();\r\n        setLocationRelativeTo(null);\r\n    }\r\n    private void cargueElementos(){\r\n        newFigure = new NewFigurePanel(this);\r\n        board = new Board(this);\r\n\r\n    }\r\n    private void configureElementos(){\r\n        board.setBorder(new CompoundBorder(new EmptyBorder(5, 5, 5, 5),\r\n                new TitledBorder(\"Board\")));\r\n        newFigure.setBorder(new CompoundBorder(new EmptyBorder(5,5,5,5),\r\n                new TitledBorder(\"Game Info\")));\r\n    }\r\n    private void agregueElementos(){\r\n        add(board,BorderLayout.CENTER);\r\n        add(newFigure,BorderLayout.WEST);\r\n    }\r\n    public boolean isPaused(){\r\n        return false;\r\n    }\r\n\r\n    public boolean isNewGame() {\r\n        return false;\r\n    }\r\n\r\n    public boolean isGameOver() {\r\n        return false;\r\n    }\r\n\r\n    public Tetrominoe getPieceType() {\r\n        return null;\r\n    }\r\n\r\n    public int getPieceCol() {\r\n        return 0;\r\n    }\r\n\r\n    public int getPieceRow() {\r\n        return 0;\r\n    }\r\n\r\n    public int getPieceRotation() {\r\n        return 0;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Presentacion/Tetris1.java b/src/Presentacion/Tetris1.java
--- a/src/Presentacion/Tetris1.java	(revision f31d3f29cadc13628bf982bf4734c5fe0deff73b)
+++ b/src/Presentacion/Tetris1.java	(date 1637509471565)
@@ -57,6 +57,8 @@
         return false;
     }
 
+
+
     public boolean isNewGame() {
         return false;
     }
